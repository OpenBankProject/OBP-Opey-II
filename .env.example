# Directory where the endpoint and glossary vector databases are
CHROMADB_DIRECTORY="./src/data/chroma_langchain_db"

# Open Bank Project Config
OBP_BASE_URL="https://apisandbox.openbankproject.com"
OBP_API_VERSION="v5.1.0"

# Open Bank Project API directlogin Credentials
OBP_USERNAME="your-obp-username"
OBP_PASSWORD="your-obp-password"
OBP_CONSUMER_KEY="your-obp-consumer-key"

# For testing purpouses, fill out the credentials for a consentor account i.e. API Explorer II
API_EXPLORER_CONSUMER_KEY="your-obp-consumer-key"

## Server Config
# Mode to run server in for hot-reloading
MODE="dev"
PORT=5000

## Logging Config
# Wether or not to log tokens to the console, creates a massive amount of logs if enabled
# Recommended to only enable for debugging purposes
LOG_TOKENS="false"

# Log level config
LOG_LEVEL="INFO"

## Client config. Tells the client where to call the service.
AGENT_BASE_URL="http://localhost:5000"

# Session secret key for signing cookies i.e. some random UUID
SESSION_SECRET_KEY="very-very-secret"

# ==============================================================================
# CORS CONFIGURATION
# ==============================================================================

# CORS Allowed Origins
# Comma-separated list of allowed origins for CORS requests
# IMPORTANT: Use comma-separated format, NOT JSON array format!
#
# Examples:
# Single origin:     CORS_ALLOWED_ORIGINS=http://localhost:5174
# Multiple origins:  CORS_ALLOWED_ORIGINS=http://localhost:5173,http://localhost:5174,https://mydomain.com
#
# Common development ports:
# - 5173: Vite default port
# - 5174: SvelteKit/Portal default port
# - 3000: React/Next.js default port
#
# If not set, defaults to: http://localhost:5174,http://localhost:3000,http://127.0.0.1:5174,http://127.0.0.1:3000
CORS_ALLOWED_ORIGINS=http://localhost:5173,http://localhost:5174

# CORS Allowed Methods (optional)
# Comma-separated list of allowed HTTP methods
# Default: GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS

# CORS Allowed Headers (optional)
# Comma-separated list of allowed headers
# Default: Content-Type,Authorization,Consent-JWT
CORS_ALLOWED_HEADERS=Content-Type,Authorization,Consent-JWT

# CORS Debug Mode (optional)
# Enable detailed CORS logging for troubleshooting
# Set to 'true' to enable debug logging
# Default: false
DEBUG_CORS=false

# ==============================================================================
# IMPORTANT CORS NOTES:
# ==============================================================================
# 1. NEVER use JSON array format like: CORS_ALLOWED_ORIGINS='["http://localhost:5174"]'
#    This will cause parsing errors and CORS failures!
#
# 2. Always use comma-separated string format: CORS_ALLOWED_ORIGINS=http://localhost:5174,http://localhost:3000
#
# 3. For debugging CORS issues, set DEBUG_CORS=true and check the logs
#
# 4. In production, only include your actual domain(s)
#
# 5. The system automatically includes credentials support (cookies/auth headers)
# ==============================================================================

#Langhain Tracing
LANGCHAIN_TRACING_V2="false"
LANGCHAIN_API_KEY="lsv2_pt_..."
LANGCHAIN_PROJECT="langchain-opey"

# SelfRAG Retriever Config
VECTOR_STORE_TYPE="chroma" # Currently only chroma is supported

ENDPOINT_RETRIEVER_BATCH_SIZE=8
ENDPOINT_RETRIEVER_MAX_RETRIES=2
# If there are less than this number of endpoints found for a given retrieval, retry with rewritten question
ENDPOINT_RETRIEVER_RETRY_THRESHOLD=1

# Number of conversation tokens at which we trim the messages and summarize the conversation
CONVERSATION_TOKEN_LIMIT=50000

# OBP API MODE dictates Opey's tool calling behaviour with respect to the Open Bank Project API

#   NONE: Opey cannot call the OBP API at all.
#   SAFE: Opey can only make GET requests to OBP API, these do not need to be approved by the user
#   DANGEROUS: Opey can make any request to OBP API, including POST, PUT, DELETE, etc. These requests will be approved by the user
#   TEST: Opey can make any request to OBP API, including POST, PUT, DELETE, etc. These requests will not wait for user approval.
#
# ONLY USE TEST MODE ON A OBP TEST SANDBOX OR YOU RISK LOSING DATA
# For most cases, DANGEROUS is the best option, as it allows Opey to make any request to OBP API, including POST, PUT, DELETE, etc. These requests will be approved by the user
# use SAFE mode if you want to limit Opey's access to the OBP API, and only allow it to make GET requests i.e. on API Explorer II
OBP_API_MODE="SAFE"

# Anonymous Session Config
# Allow users to create anonymous sessions without OBP consent
ALLOW_ANONYMOUS_SESSIONS="true"
# Maximum number of tokens an anonymous session can use before requiring authentication
ANONYMOUS_SESSION_TOKEN_LIMIT=10000
# Maximum number of requests an anonymous session can make before requiring authentication
ANONYMOUS_SESSION_REQUEST_LIMIT=20

# Model Config
## you will need the appropriate API key for the model provider you choose
## i.e. OPENAI_API_KEY or ANTHROPIC_API_KEY
MODEL_PROVIDER="anthropic" # "openai"
# or "anthropic"
MODEL_NAME="claude-sonnet-4"

# Model API
OPENAI_API_KEY="sk-proj-..."
ANTHROPIC_API_KEY="sk-ant-api03-..."

# Default LLM Config, NOTE that you will need the API key for whatever the model provider is
DEFAULT_LLM_MODEL="gpt-4o"
DEFAULT_LLM_TEMPERATURE=0.5

# Set to false for local development
SECURE_COOKIES=true
